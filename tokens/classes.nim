{.emit: """
#include "classes.h"

TokenizerParseInfo ParseCharacterAttributesTable[] =
{
	{ "{",                 TOK_START,    0 },

	// START ParseCharacterAttributesTable
	{ "DamageType00",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[0])     },
	{ "DamageType01",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[1])     },
	{ "DamageType02",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[2])     },
	{ "DamageType03",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[3])     },
	{ "DamageType04",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[4])     },
	{ "DamageType05",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[5])     },
	{ "DamageType06",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[6])     },
	{ "DamageType07",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[7])     },
	{ "DamageType08",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[8])     },
	{ "DamageType09",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[9])     },
	{ "DamageType10",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[10])    },
	{ "DamageType11",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[11])    },
	{ "DamageType12",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[12])    },
	{ "DamageType13",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[13])    },
	{ "DamageType14",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[14])    },
	{ "DamageType15",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[15])    },
	{ "DamageType16",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[16])    },
	{ "DamageType17",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[17])    },
	{ "DamageType18",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[18])    },
	{ "DamageType19",    TOK_F32ARRAY(CharacterAttributesTable, pfDamageType[19])    },
	{ "HitPoints",       TOK_F32ARRAY(CharacterAttributesTable, pfHitPoints)         },
	{ "Endurance",       TOK_F32ARRAY(CharacterAttributesTable, pfEndurance)         },
	{ "Insight",         TOK_F32ARRAY(CharacterAttributesTable, pfInsight)           },
	{ "Idea",            TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfInsight)           },
	{ "Rage",            TOK_F32ARRAY(CharacterAttributesTable, pfRage)              },
	{ "ToHit",           TOK_F32ARRAY(CharacterAttributesTable, pfToHit)             },
	{ "DefenseType00",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[0])    },
	{ "DefenseType01",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[1])    },
	{ "DefenseType02",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[2])    },
	{ "DefenseType03",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[3])    },
	{ "DefenseType04",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[4])    },
	{ "DefenseType05",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[5])    },
	{ "DefenseType06",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[6])    },
	{ "DefenseType07",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[7])    },
	{ "DefenseType08",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[8])    },
	{ "DefenseType09",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[9])    },
	{ "DefenseType10",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[10])   },
	{ "DefenseType11",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[11])   },
	{ "DefenseType12",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[12])   },
	{ "DefenseType13",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[13])   },
	{ "DefenseType14",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[14])   },
	{ "DefenseType15",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[15])   },
	{ "DefenseType16",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[16])   },
	{ "DefenseType17",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[17])   },
	{ "DefenseType18",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[18])   },
	{ "DefenseType19",   TOK_F32ARRAY(CharacterAttributesTable, pfDefenseType[19])   },
	{ "Defense",         TOK_F32ARRAY(CharacterAttributesTable, pfDefense)           },
	{ "SpeedRunning",    TOK_F32ARRAY(CharacterAttributesTable, pfSpeedRunning)      },
	{ "RunSpeed",        TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfSpeedRunning)      },
	{ "SpeedFlying",     TOK_F32ARRAY(CharacterAttributesTable, pfSpeedFlying)       },
	{ "FlySpeed",        TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfSpeedFlying)       },
	{ "SpeedSwimming",   TOK_F32ARRAY(CharacterAttributesTable, pfSpeedSwimming)     },
	{ "SpeedJumping",    TOK_F32ARRAY(CharacterAttributesTable, pfSpeedJumping)      },
	{ "JumpHeight",      TOK_F32ARRAY(CharacterAttributesTable, pfJumpHeight)        },
	{ "MovementControl", TOK_F32ARRAY(CharacterAttributesTable, pfMovementControl)   },
	{ "MovementFriction", TOK_F32ARRAY(CharacterAttributesTable, pfMovementFriction)  },
	{ "Stealth",         TOK_F32ARRAY(CharacterAttributesTable, pfStealth)           },
	{ "StealthRadius",   TOK_F32ARRAY(CharacterAttributesTable, pfStealthRadius)     },
	{ "StealthRadiusPlayer", TOK_F32ARRAY(CharacterAttributesTable, pfStealthRadiusPlayer) },
	{ "PerceptionRadius", TOK_F32ARRAY(CharacterAttributesTable, pfPerceptionRadius)  },
	{ "Regeneration",    TOK_F32ARRAY(CharacterAttributesTable, pfRegeneration)      },
	{ "Recovery",        TOK_F32ARRAY(CharacterAttributesTable, pfRecovery)          },
	{ "InsightRecovery", TOK_F32ARRAY(CharacterAttributesTable, pfInsightRecovery)   },
	{ "ThreatLevel",     TOK_F32ARRAY(CharacterAttributesTable, pfThreatLevel)       },
	{ "Taunt",           TOK_F32ARRAY(CharacterAttributesTable, pfTaunt)             },
	{ "Placate",         TOK_F32ARRAY(CharacterAttributesTable, pfPlacate)           },
	{ "Confused",        TOK_F32ARRAY(CharacterAttributesTable, pfConfused)          },
	{ "Confuse",         TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfConfused)          },
	{ "Afraid",          TOK_F32ARRAY(CharacterAttributesTable, pfAfraid)            },
	{ "Terrorized",      TOK_F32ARRAY(CharacterAttributesTable, pfTerrorized)        },
	{ "Terrorize",       TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfTerrorized)        },
	{ "Held",            TOK_F32ARRAY(CharacterAttributesTable, pfHeld)              },
	{ "Immobilized",     TOK_F32ARRAY(CharacterAttributesTable, pfImmobilized)       },
	{ "Immobilize",      TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfImmobilized)       },
	{ "Stunned",         TOK_F32ARRAY(CharacterAttributesTable, pfStunned)           },
	{ "Stun",            TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfStunned)           },
	{ "Sleep",           TOK_F32ARRAY(CharacterAttributesTable, pfSleep)             },
	{ "Fly",             TOK_F32ARRAY(CharacterAttributesTable, pfFly)               },
	{ "Jumppack",        TOK_F32ARRAY(CharacterAttributesTable, pfJumppack)          },
	{ "Teleport",        TOK_F32ARRAY(CharacterAttributesTable, pfTeleport)          },
	{ "Untouchable",     TOK_F32ARRAY(CharacterAttributesTable, pfUntouchable)       },
	{ "Intangible",      TOK_F32ARRAY(CharacterAttributesTable, pfIntangible)        },
	{ "OnlyAffectsSelf", TOK_F32ARRAY(CharacterAttributesTable, pfOnlyAffectsSelf)   },
	{ "ExperienceGain",  TOK_F32ARRAY(CharacterAttributesTable, pfExperienceGain)    },
	{ "InfluenceGain",   TOK_F32ARRAY(CharacterAttributesTable, pfInfluenceGain)     },
	{ "PrestigeGain",    TOK_F32ARRAY(CharacterAttributesTable, pfPrestigeGain)      },
	{ "NullBool",        TOK_F32ARRAY(CharacterAttributesTable, pfNullBool)          },
	{ "Evade",           TOK_REDUNDANTNAME|TOK_F32ARRAY(CharacterAttributesTable, pfNullBool)          },
	{ "Knockup",         TOK_F32ARRAY(CharacterAttributesTable, pfKnockup)           },
	{ "Knockback",       TOK_F32ARRAY(CharacterAttributesTable, pfKnockback)         },
	{ "Repel",           TOK_F32ARRAY(CharacterAttributesTable, pfRepel)             },
	{ "Accuracy",        TOK_F32ARRAY(CharacterAttributesTable, pfAccuracy)          },
	{ "Radius",          TOK_F32ARRAY(CharacterAttributesTable, pfRadius)            },
	{ "Arc",             TOK_F32ARRAY(CharacterAttributesTable, pfArc)               },
	{ "Range",           TOK_F32ARRAY(CharacterAttributesTable, pfRange)             },
	{ "TimeToActivate",  TOK_F32ARRAY(CharacterAttributesTable, pfTimeToActivate)    },
	{ "RechargeTime",    TOK_F32ARRAY(CharacterAttributesTable, pfRechargeTime)      },
	{ "InterruptTime",   TOK_F32ARRAY(CharacterAttributesTable, pfInterruptTime)     },
	{ "EnduranceDiscount", TOK_F32ARRAY(CharacterAttributesTable, pfEnduranceDiscount) },
	{ "InsightDiscount", TOK_F32ARRAY(CharacterAttributesTable, pfInsightDiscount)   },
	{ "Meter",           TOK_F32ARRAY(CharacterAttributesTable, pfMeter)             },
	{ "Elusivity00",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[0])    },
	{ "Elusivity01",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[1])    },
	{ "Elusivity02",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[2])    },
	{ "Elusivity03",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[3])    },
	{ "Elusivity04",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[4])    },
	{ "Elusivity05",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[5])    },
	{ "Elusivity06",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[6])    },
	{ "Elusivity07",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[7])    },
	{ "Elusivity08",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[8])    },
	{ "Elusivity09",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[9])    },
	{ "Elusivity10",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[10])   },
	{ "Elusivity11",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[11])   },
	{ "Elusivity12",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[12])   },
	{ "Elusivity13",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[13])   },
	{ "Elusivity14",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[14])   },
	{ "Elusivity15",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[15])   },
	{ "Elusivity16",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[16])   },
	{ "Elusivity17",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[17])   },
	{ "Elusivity18",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[18])   },
	{ "Elusivity19",     TOK_F32ARRAY(CharacterAttributesTable, pfElusivity[19])   },
	{ "Defense",         TOK_F32ARRAY(CharacterAttributesTable, pfDefense)         },
	{ "Absorb",          TOK_F32ARRAY(CharacterAttributesTable, pfAbsorb)          },

	// END ParseCharacterAttributesTable

	{ "}",                 TOK_END,      0 },
	{ 0 }
};

TokenizerParseInfo ParseCharacterAttributes[] =
{
	{ "{",               TOK_START,  0 },

	// START ParseCharacterAttributes
	{ "DamageType00",    TOK_F32                      (CharacterAttributes, fDamageType[0], 0)     },
	{ "DamageType01",    TOK_F32                      (CharacterAttributes, fDamageType[1], 0)     },
	{ "DamageType02",    TOK_F32                      (CharacterAttributes, fDamageType[2], 0)     },
	{ "DamageType03",    TOK_F32                      (CharacterAttributes, fDamageType[3], 0)     },
	{ "DamageType04",    TOK_F32                      (CharacterAttributes, fDamageType[4], 0)     },
	{ "DamageType05",    TOK_F32                      (CharacterAttributes, fDamageType[5], 0)     },
	{ "DamageType06",    TOK_F32                      (CharacterAttributes, fDamageType[6], 0)     },
	{ "DamageType07",    TOK_F32                      (CharacterAttributes, fDamageType[7], 0)     },
	{ "DamageType08",    TOK_F32                      (CharacterAttributes, fDamageType[8], 0)     },
	{ "DamageType09",    TOK_F32                      (CharacterAttributes, fDamageType[9], 0)     },
	{ "DamageType10",    TOK_F32                      (CharacterAttributes, fDamageType[10], 0)    },
	{ "DamageType11",    TOK_F32                      (CharacterAttributes, fDamageType[11], 0)    },
	{ "DamageType12",    TOK_F32                      (CharacterAttributes, fDamageType[12], 0)    },
	{ "DamageType13",    TOK_F32                      (CharacterAttributes, fDamageType[13], 0)    },
	{ "DamageType14",    TOK_F32                      (CharacterAttributes, fDamageType[14], 0)    },
	{ "DamageType15",    TOK_F32                      (CharacterAttributes, fDamageType[15], 0)    },
	{ "DamageType16",    TOK_F32                      (CharacterAttributes, fDamageType[16], 0)    },
	{ "DamageType17",    TOK_F32                      (CharacterAttributes, fDamageType[17], 0)    },
	{ "DamageType18",    TOK_F32                      (CharacterAttributes, fDamageType[18], 0)    },
	{ "DamageType19",    TOK_F32                      (CharacterAttributes, fDamageType[19], 0)    },
	{ "HitPoints",       TOK_F32                      (CharacterAttributes, fHitPoints, 0)         },
	{ "Absorb",          TOK_F32                      (CharacterAttributes, fAbsorb, 0)          },
	{ "Endurance",       TOK_F32                      (CharacterAttributes, fEndurance, 0)         },
	{ "Insight",         TOK_F32                      (CharacterAttributes, fInsight, 0)           },
	{ "Idea",            TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fInsight, 0)           },
	{ "Rage",            TOK_F32                      (CharacterAttributes, fRage, 0)              },
	{ "ToHit",           TOK_F32                      (CharacterAttributes, fToHit, 0)             },
	{ "DefenseType00",   TOK_F32                      (CharacterAttributes, fDefenseType[0], 0)    },
	{ "DefenseType01",   TOK_F32                      (CharacterAttributes, fDefenseType[1], 0)    },
	{ "DefenseType02",   TOK_F32                      (CharacterAttributes, fDefenseType[2], 0)    },
	{ "DefenseType03",   TOK_F32                      (CharacterAttributes, fDefenseType[3], 0)    },
	{ "DefenseType04",   TOK_F32                      (CharacterAttributes, fDefenseType[4], 0)    },
	{ "DefenseType05",   TOK_F32                      (CharacterAttributes, fDefenseType[5], 0)    },
	{ "DefenseType06",   TOK_F32                      (CharacterAttributes, fDefenseType[6], 0)    },
	{ "DefenseType07",   TOK_F32                      (CharacterAttributes, fDefenseType[7], 0)    },
	{ "DefenseType08",   TOK_F32                      (CharacterAttributes, fDefenseType[8], 0)    },
	{ "DefenseType09",   TOK_F32                      (CharacterAttributes, fDefenseType[9], 0)    },
	{ "DefenseType10",   TOK_F32                      (CharacterAttributes, fDefenseType[10], 0)   },
	{ "DefenseType11",   TOK_F32                      (CharacterAttributes, fDefenseType[11], 0)   },
	{ "DefenseType12",   TOK_F32                      (CharacterAttributes, fDefenseType[12], 0)   },
	{ "DefenseType13",   TOK_F32                      (CharacterAttributes, fDefenseType[13], 0)   },
	{ "DefenseType14",   TOK_F32                      (CharacterAttributes, fDefenseType[14], 0)   },
	{ "DefenseType15",   TOK_F32                      (CharacterAttributes, fDefenseType[15], 0)   },
	{ "DefenseType16",   TOK_F32                      (CharacterAttributes, fDefenseType[16], 0)   },
	{ "DefenseType17",   TOK_F32                      (CharacterAttributes, fDefenseType[17], 0)   },
	{ "DefenseType18",   TOK_F32                      (CharacterAttributes, fDefenseType[18], 0)   },
	{ "DefenseType19",   TOK_F32                      (CharacterAttributes, fDefenseType[19], 0)   },
	{ "Defense",         TOK_F32                      (CharacterAttributes, fDefense, 0)           },
	{ "SpeedRunning",    TOK_F32                      (CharacterAttributes, fSpeedRunning, 0)      },
	{ "RunSpeed",        TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fSpeedRunning, 0)      },
	{ "SpeedFlying",     TOK_F32                      (CharacterAttributes, fSpeedFlying, 0)       },
	{ "FlySpeed",        TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fSpeedFlying, 0)       },
	{ "SpeedSwimming",   TOK_F32                      (CharacterAttributes, fSpeedSwimming, 0)     },
	{ "SpeedJumping",    TOK_F32                      (CharacterAttributes, fSpeedJumping, 0)      },
	{ "JumpHeight",      TOK_F32                      (CharacterAttributes, fJumpHeight, 0)        },
	{ "MovementControl", TOK_F32                      (CharacterAttributes, fMovementControl, 0)   },
	{ "MovementFriction", TOK_F32                     (CharacterAttributes, fMovementFriction, 0)  },
	{ "Stealth",         TOK_F32                      (CharacterAttributes, fStealth, 0)           },
	{ "StealthRadius",   TOK_F32                      (CharacterAttributes, fStealthRadius, 0)     },
	{ "StealthRadiusPlayer", TOK_F32                  (CharacterAttributes, fStealthRadiusPlayer, 0) },
	{ "PerceptionRadius", TOK_F32                     (CharacterAttributes, fPerceptionRadius, 0)  },
	{ "Regeneration",    TOK_F32                      (CharacterAttributes, fRegeneration, 0)      },
	{ "Recovery",        TOK_F32                      (CharacterAttributes, fRecovery, 0)          },
	{ "InsightRecovery", TOK_F32                      (CharacterAttributes, fInsightRecovery, 0)   },
	{ "ThreatLevel",     TOK_F32                      (CharacterAttributes, fThreatLevel, 0)       },
	{ "Taunt",           TOK_F32                      (CharacterAttributes, fTaunt, 0)             },
	{ "Placate",         TOK_F32                      (CharacterAttributes, fPlacate, 0)           },
	{ "Confused",        TOK_F32                      (CharacterAttributes, fConfused, 0)          },
	{ "Confuse",         TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fConfused, 0)          },
	{ "Afraid",          TOK_F32                      (CharacterAttributes, fAfraid, 0)            },
	{ "Terrorized",      TOK_F32                      (CharacterAttributes, fTerrorized, 0)        },
	{ "Terrorize",       TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fTerrorized, 0)        },
	{ "Held",            TOK_F32                      (CharacterAttributes, fHeld, 0)              },
	{ "Immobilized",     TOK_F32                      (CharacterAttributes, fImmobilized, 0)       },
	{ "Immobilize",      TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fImmobilized, 0)       },
	{ "Stunned",         TOK_F32                      (CharacterAttributes, fStunned, 0)           },
	{ "Stun",            TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fStunned, 0)           },
	{ "Sleep",           TOK_F32                      (CharacterAttributes, fSleep, 0)             },
	{ "Fly",             TOK_F32                      (CharacterAttributes, fFly, 0)               },
	{ "Jumppack",        TOK_F32                      (CharacterAttributes, fJumppack, 0)          },
	{ "Teleport",        TOK_F32                      (CharacterAttributes, fTeleport, 0)          },
	{ "Untouchable",     TOK_F32                      (CharacterAttributes, fUntouchable, 0)       },
	{ "Intangible",      TOK_F32                      (CharacterAttributes, fIntangible, 0)        },
	{ "OnlyAffectsSelf", TOK_F32                      (CharacterAttributes, fOnlyAffectsSelf, 0)   },
	{ "ExperienceGain",  TOK_F32                      (CharacterAttributes, fExperienceGain, 0)    },
	{ "InfluenceGain",   TOK_F32                      (CharacterAttributes, fInfluenceGain, 0)     },
	{ "PrestigeGain",    TOK_F32                      (CharacterAttributes, fPrestigeGain, 0)      },
	{ "NullBool",        TOK_F32                      (CharacterAttributes, fNullBool, 0)          },
	{ "Evade",           TOK_REDUNDANTNAME|TOK_F32    (CharacterAttributes, fNullBool, 0)          },
	{ "Knockup",         TOK_F32                      (CharacterAttributes, fKnockup, 0)           },
	{ "Knockback",       TOK_F32                      (CharacterAttributes, fKnockback, 0)         },
	{ "Repel",           TOK_F32                      (CharacterAttributes, fRepel, 0)             },
	{ "Accuracy",        TOK_F32                      (CharacterAttributes, fAccuracy, 0)          },
	{ "Radius",          TOK_F32                      (CharacterAttributes, fRadius, 0)            },
	{ "Arc",             TOK_F32                      (CharacterAttributes, fArc, 0)               },
	{ "Range",           TOK_F32                      (CharacterAttributes, fRange, 0)             },
	{ "TimeToActivate",  TOK_F32                      (CharacterAttributes, fTimeToActivate, 0)    },
	{ "RechargeTime",    TOK_F32                      (CharacterAttributes, fRechargeTime, 0)      },
	{ "InterruptTime",   TOK_F32                      (CharacterAttributes, fInterruptTime, 0)     },
	{ "EnduranceDiscount", TOK_F32                    (CharacterAttributes, fEnduranceDiscount, 0) },
	{ "InsightDiscount", TOK_F32                      (CharacterAttributes, fInsightDiscount, 0)   },
	{ "Meter",           TOK_F32                      (CharacterAttributes, fMeter, 0)             },
	{ "Elusivity00",     TOK_F32                      (CharacterAttributes, fElusivity[0], 0)    },
	{ "Elusivity01",     TOK_F32                      (CharacterAttributes, fElusivity[1], 0)    },
	{ "Elusivity02",     TOK_F32                      (CharacterAttributes, fElusivity[2], 0)    },
	{ "Elusivity03",     TOK_F32                      (CharacterAttributes, fElusivity[3], 0)    },
	{ "Elusivity04",     TOK_F32                      (CharacterAttributes, fElusivity[4], 0)    },
	{ "Elusivity05",     TOK_F32                      (CharacterAttributes, fElusivity[5], 0)    },
	{ "Elusivity06",     TOK_F32                      (CharacterAttributes, fElusivity[6], 0)    },
	{ "Elusivity07",     TOK_F32                      (CharacterAttributes, fElusivity[7], 0)    },
	{ "Elusivity08",     TOK_F32                      (CharacterAttributes, fElusivity[8], 0)    },
	{ "Elusivity09",     TOK_F32                      (CharacterAttributes, fElusivity[9], 0)    },
	{ "Elusivity10",     TOK_F32                      (CharacterAttributes, fElusivity[10], 0)   },
	{ "Elusivity11",     TOK_F32                      (CharacterAttributes, fElusivity[11], 0)   },
	{ "Elusivity12",     TOK_F32                      (CharacterAttributes, fElusivity[12], 0)   },
	{ "Elusivity13",     TOK_F32                      (CharacterAttributes, fElusivity[13], 0)   },
	{ "Elusivity14",     TOK_F32                      (CharacterAttributes, fElusivity[14], 0)   },
	{ "Elusivity15",     TOK_F32                      (CharacterAttributes, fElusivity[15], 0)   },
	{ "Elusivity16",     TOK_F32                      (CharacterAttributes, fElusivity[16], 0)   },
	{ "Elusivity17",     TOK_F32                      (CharacterAttributes, fElusivity[17], 0)   },
	{ "Elusivity18",     TOK_F32                      (CharacterAttributes, fElusivity[18], 0)   },
	{ "Elusivity19",     TOK_F32                      (CharacterAttributes, fElusivity[19], 0)   },
	{ "ElusivityBase",   TOK_F32                      (CharacterAttributes, fElusivityBase, 0)   },
	// END ParseCharacterAttributes

	{ "}",                 TOK_END,   -1  },
	{ 0 }
};

TokenizerParseInfo ParseNamedTable[] =
{
	{ "{",                 TOK_START,    0 },
	{ "Name",              TOK_STRING(NamedTable, pchName, 0)  },
	{ "Values",            TOK_F32ARRAY(NamedTable, pfValues) },
	{ "}",                 TOK_END,      0 },
	{ "", 0, 0 }
};

TokenizerParseInfo ParseCharacterClass[] =
{
	{ "{",                   		TOK_START,			0 },
	{ "Name",                		TOK_STRING(CharacterClass, pchName, 0)              },
	{ "DisplayName",         		TOK_STRING(CharacterClass, pchDisplayName, 0)       },
	{ "DisplayHelp",         		TOK_STRING(CharacterClass, pchDisplayHelp, 0)       },
	{ "AllowedOrigins",      		TOK_STRINGARRAY(CharacterClass, pchAllowedOriginNames)},
	{ "SpecialRestrictions",		TOK_STRINGARRAY(CharacterClass, pchSpecialRestrictions)},
	{ "StoreRequires",				TOK_STRING(CharacterClass, pchStoreRestrictions, 0)},
	{ "LockedTooltip",				TOK_STRING(CharacterClass, pchLockedTooltip, 0)},
	{ "ProductCode",				TOK_STRING(CharacterClass, pchProductCode, 0)},
	{ "ReductionClass",				TOK_STRING(CharacterClass, pchReductionClass, 0)},
	{ "ReduceAsArchvillain",		TOK_BOOLFLAG(CharacterClass, bReduceAsAV, 0)},
	{ "LevelUpRespecs",				TOK_INTARRAY(CharacterClass, piLevelUpRespecs)},
	{ "DisplayShortHelp",    		TOK_STRING(CharacterClass, pchDisplayShortHelp, 0)  },
	{ "Icon",						TOK_STRING(CharacterClass, pchIcon, 0)              },
	{ "PrimaryCategory",			TOK_STRING(CharacterClass, pchTempCategory[kCategory_Primary], 0)   },
	{ "SecondaryCategory",			TOK_STRING(CharacterClass, pchTempCategory[kCategory_Secondary], 0) },
	{ "PowerPoolCategory",			TOK_STRING(CharacterClass, pchTempCategory[kCategory_Pool], 0)      },
	{ "EpicPoolCategory",			TOK_STRING(CharacterClass, pchTempCategory[kCategory_Epic], 0)      },
	{ "AttribMin",					TOK_STRUCT(CharacterClass, ppattrMin,				ParseCharacterAttributes)      },
	{ "AttribBase",					TOK_STRUCT(CharacterClass, ppattrBase,				ParseCharacterAttributes)      },
	{ "StrengthMin",				TOK_STRUCT(CharacterClass, ppattrStrengthMin,		ParseCharacterAttributes)      },
	{ "ResistanceMin",				TOK_STRUCT(CharacterClass, ppattrResistanceMin,		ParseCharacterAttributes)      },
	{ "AtrribDiminStrIn",			TOK_STRUCT(CharacterClass, ppattrDiminStr[kClassesDiminish_Inner],		ParseCharacterAttributes)      },
	{ "AtrribDiminStrOut",			TOK_STRUCT(CharacterClass, ppattrDiminStr[kClassesDiminish_Outer],		ParseCharacterAttributes)      },
	{ "AtrribDiminCurIn",			TOK_STRUCT(CharacterClass, ppattrDiminCur[kClassesDiminish_Inner],		ParseCharacterAttributes)      },
	{ "AtrribDiminCurOut",			TOK_STRUCT(CharacterClass, ppattrDiminCur[kClassesDiminish_Outer],		ParseCharacterAttributes)      },
	{ "AtrribDiminResIn",			TOK_STRUCT(CharacterClass, ppattrDiminRes[kClassesDiminish_Inner],		ParseCharacterAttributes)      },
	{ "AtrribDiminResOut",			TOK_STRUCT(CharacterClass, ppattrDiminRes[kClassesDiminish_Outer],		ParseCharacterAttributes)      },
	{ "AttribMaxTable",				TOK_STRUCT(CharacterClass, ppTempAttribMax,		ParseCharacterAttributesTable) },
	{ "AttribMaxMaxTable",			TOK_STRUCT(CharacterClass, ppTempAttribMaxMax,	ParseCharacterAttributesTable) },
	{ "StrengthMaxTable",			TOK_STRUCT(CharacterClass, ppTempStrengthMax,		ParseCharacterAttributesTable) },
	{ "ResistanceMaxTable",			TOK_STRUCT(CharacterClass, ppTempResistanceMax,	ParseCharacterAttributesTable) },
	{ "ModTable",					TOK_STRUCT(CharacterClass, ppNamedTables,        ParseNamedTable)            },
	{ "ConnectHPAndStatus",			TOK_BOOL(CharacterClass, bConnectHPAndStatus, 0), BoolEnum},
	{ "ConnectHPAndIntegrity",		TOK_REDUNDANTNAME|TOK_BOOL(CharacterClass, bConnectHPAndStatus, 0), BoolEnum},
	{ "DefiantHitPointsAttrib",		TOK_AUTOINT(CharacterClass, offDefiantHitPointsAttrib, 0), ParsePowerDefines },
	{ "DefiantScale",				TOK_F32(CharacterClass, fDefiantScale, 1.0f)  },

	// These are for shared memory stuff. Ignore them.
	{ "_FinalAttrMax_",				TOK_POINTER(CharacterClass, pattrMax, iNumBytesTables) },
	{ "_FinalAttrMaxMax_",			TOK_POINTER(CharacterClass, pattrMaxMax, iNumBytesTables)    },
	{ "_FinalAttrStrengthMax_",		TOK_POINTER(CharacterClass, pattrStrengthMax, iNumBytesTables)    },
	{ "_FinalAttrResistanceMax_",	TOK_POINTER(CharacterClass, pattrResistanceMax, iNumBytesTables)    },

	{ "}",                        TOK_END,      0 },
	{ "", 0, 0 }
};

TokenizerParseInfo ParseCharacterClasses[] =
{
	{ "Class", TOK_STRUCT(CharacterClasses, ppClasses, ParseCharacterClass)},
	{ "", 0, 0 }
};
""".}